#!/bin/bash
#
# Keeps things running...
#
# Usage: foreman TIMEOUT [optional delay between checks]
#
WORKDIR=$(dirname $0)/work/

if [ -z "$1" ];then
    echo "must specify a work time limit">&2;
    exit 1;
else
    TIMEOUT="$1"
fi
if [ -z "$2" ];then
    DELAY=0.05
else
    DELAY=$2
fi

spawn(){
    local name=$1;
    local in=${name}.run;
    local working=${name}.working;
    local tmp=${name}.tmp;
    local out=${name}.done;
    mv $in $working
    pushd "../.."
    timeout $TIMEOUT sh "sh-runner/work/$working" > "sh-runner/work/${tmp}"
    echo $? >> "sh-runner/work/${tmp}"
    popd
    mv $tmp $out
    rm $working
}

pushd $WORKDIR
function exit_hook (){
    local left=$(ls *.run *.working 2>/dev/null|wc -l)
    if [ $left -eq 0 ];then
        exit 0
    else
        echo "" >&2;
        echo "$left active jobs" >&2;
    fi
}
trap exit_hook SIGHUP SIGINT SIGTERM

for ((;;));do
    for new in $(ls --color=never *.run 2>/dev/null);do
        if [ -f "${new%.run}.done" ];then
            echo "${new} has already been run">&2
            rm "${new}"
        else
            spawn "${new%.run}">/dev/null 2>/dev/null </dev/null &
        fi
    done
    sleep $DELAY;
done
popd
